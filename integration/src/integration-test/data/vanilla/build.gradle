group 'com.example'

buildscript {
    repositories {
        if (System.getProperty("maven.local", "true") == "true") {
            mavenLocal()
        }
        maven { url 'http://asakusafw.s3.amazonaws.com/maven/releases' }
        maven { url 'http://asakusafw.s3.amazonaws.com/maven/snapshots' }
    }
    dependencies {
        classpath group: 'com.asakusafw.vanilla', 
                  name: 'asakusa-vanilla-gradle',
                  version: System.getProperty("asakusafw-lang.version")
    }
}

if (System.getProperty("maven.local", "true") == "true") {
    repositories {
        mavenLocal()
    }
}

apply plugin: 'asakusafw-sdk'
apply plugin: 'asakusafw-organizer'
apply plugin: 'asakusafw-vanilla'
apply plugin: 'eclipse'

asakusafw {
    sdk.incubating = System.getProperty('sdk.incubating', 'false') != 'false'
}

asakusafwOrganizer {
    hadoop {
        embed !System.getenv('HADOOP_CMD')
    }
    vanilla{
        enabled true
    }
    profiles.dev {
        assembly.into('.') {
            from 'src/main/conf'
            replace([
                'project.home.path' : file(System.getenv('PROJECT_HOME')).absolutePath.replace('\\', '/'),
                'project.home.uri' : uri(System.getenv('PROJECT_HOME')).toString(),
            ])
        }
    }
}

test {
    testLogging {
        showStandardStreams true
        showExceptions true
        showStackTraces true
        showCauses true
        exceptionFormat 'full'
    }
}

task runTest(type: com.asakusafw.gradle.tasks.TestToolTask) {
    batchArguments += [input : 'input']
    batchArguments += [output : 'output']
    clean description: 'com.example.KsvSortBatch'
    prepare importer: 'com.example.KsvInputDescription',
        data: '/com/example/simple.xls#data'
    run batch: 'vanilla.perf.average.sort'
    verify exporter: 'com.example.KsvOutputDescription',
        data: '/com/example/simple.xls#data',
        rule: '/com/example/simple.xls#rule'
}

if (System.getProperty('hive.version')) {
    asakusafw {
        sdk.hive true
    }
    asakusafwOrganizer {
        hive.enabled true
    }
    if (System.getProperty('hive.version', 'default') != 'default') {
        asakusafwOrganizer {
            hive.libraries = ["org.apache.hive:hive-exec:${System.getProperty('hive.version')}"]
        }
    }
    if (System.getProperty('sdk.hive.version', 'default') != 'default') {
        asakusafw {
            sdk.hive = ["org.apache.hive:hive-exec:${System.getProperty('sdk.hive.version')}"]
        }
    }
}
