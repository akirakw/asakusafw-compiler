description 'Asakusa Framework Compiler Project'

allprojects {
    group 'com.asakusafw.lang.compiler'
    version '0.1-SNAPSHOT'
    ext.asakusafwVersion = '0.7.2-hadoop1'
}

subprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://asakusafw.s3.amazonaws.com/maven/releases' }
    }
    plugins.withId('java') {
        sourceCompatibility = JavaVersion.toVersion('1.7')
        targetCompatibility = sourceCompatibility
        tasks.withType(JavaCompile) {
            options.encoding = 'UTF-8'
        }
        tasks.withType(Javadoc) {
            options.locale = 'en_US'
            options.encoding = 'UTF-8'
            if (options instanceof org.gradle.external.javadoc.StandardJavadocDocletOptions) {
                options.docEncoding = 'UTF-8'
                options.footer = "Asakusa Framework Compiler Projects"
                options.showFromProtected()
            }
        }
        ext.useSLF4J = {
            dependencies {
                compile "org.slf4j:slf4j-api:1.7.10"
                testRuntime "ch.qos.logback:logback-classic:1.1.2"
            }
        }
        ext.useHadoop = {
            dependencies {
                testRuntime "org.apache.hadoop:hadoop-core:1.2.1"
            }
        }
        dependencies {
            testCompile 'junit:junit:4.11'
            testCompile 'org.hamcrest:hamcrest-library:1.3'
        }
        task sourcesJar(type: Jar) {
            classifier 'sources'
            from project.sourceSets.main.allJava
        }
        artifacts {
            archives project.tasks.sourcesJar
        }
    }
    plugins.withId('maven') {
        tasks.install {
            repositories.mavenInstaller {
                pom.withXml { provider ->
                    def root = provider.asNode()
                    def repos = root.children().find { it.name() == 'repositories' } ?: root.appendNode('repositories')
                    def node = repos.appendNode('repository')
                    node.appendNode 'id', 'com.asakusafw.releases'
                    node.appendNode 'name', 'Asakusa Framework Repository'
                    node.appendNode 'url', 'http://asakusafw.s3.amazonaws.com/maven/releases'
                    node.appendNode('snapshots').with { parent ->
                        new Node(parent, 'enabled', 'false')
                    }
                }
            }
        }
    }
    plugins.withId('eclipse') {
        project.eclipse.classpath {
            file {
                whenMerged { classpath ->
                    classpath.entries.findAll { it.path.contains('org.eclipse.jdt.launching.JRE_CONTAINER') }.each {
                        it.path = "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-${project.sourceCompatibility}"
                    }
                    classpath.entries.unique()
                }
            }
        }
        tasks.eclipseProject << {
            File file = project.file('.settings/org.eclipse.core.resources.prefs')
            Properties properties = new Properties()
            if (file.exists()) {
                file.withInputStream { stream ->
                    properties.load(stream)
                }
            }
            properties.setProperty('eclipse.preferences.version', '1')
            properties.setProperty('encoding/<project>', 'UTF-8')
            mkdir file.parentFile
            file.withOutputStream { stream ->
                properties.store(stream, null)
            }
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion '2.3'
    jarFile file('.buildtools/gradlew.jar')
}
